trigger: none


pr: none

stages:
- stage: Build

  displayName: 'Build Artifact'

  jobs:
  - job: logic_app_build
    displayName: 'Build and publish logic app'
    steps:
    - task: CopyFiles@2
      displayName: 'Create project folder'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/logic-app-v2/azure-devops-sample'
        Contents: |
          host.json
          connections.json
          test1/**
        TargetFolder: '$(System.DefaultWorkingDirectory)/logic-app-v2/project_output'

    - task: ArchiveFiles@2
      displayName: 'Create project zip'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/logic-app-v2/project_output'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish project zip artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifact: 'logicAppCIArtifact'
        publishLocation: 'pipeline'


- stage: Deployment

  displayName: 'Deploy logic app'

  jobs:
  - job: logic_app_deploy
    displayName: 'Deploy logic app'
    steps:
    # - task: DownloadPipelineArtifact@2
    #   inputs:
    #     artifact: 'logicAppCIArtifact'
    #     path: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    # - script: dir
    #   workingDirectory: $(Build.ArtifactStagingDirectory)
    #   displayName: List contents of a folder
    - task: AzureFunctionApp@1
      displayName: 'Deploy logic app workflows'
      inputs:
        azureSubscription: 'huidong'
        ConnectedServiceName: 'huidong'
        resourceGroupName: 'huidong'
        location: 'japaneast'
        appType: 'functionApp'
        appName: 'HLDNStest1'
        package: '$(Pipeline.Workspace)/cipipeline/$(logicAppCIArtifactName)/$(resources.pipeline.cipipeline.runID).zip'
        # package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        deploymentMethod: 'zipDeploy'